-*- Text -*-



(1) create PAGE-OBJECT and PHTML-PAGE-OBJECT (and HTML-PAGE-OBJECT for
interpolation-free operation?  Not really - who cares?)

-done

(2) Some way to instantiate an object would be nice.  I say we read it
from the filesystem and guess the object type from filename extension.
Butcher the edit handler to do this, also parsing the categories and
suchlike.

-need category support, else done

(3) Write methods on PHTML-PAGE-OBJECT to do view and view-for-edit
(from ram) and save (to disk)

-done

(4) Add methods to

- rename an object
- delete an object
- search against criteria

-done, less search

(5) need to instantiate all those objects somehow

I'm thinking along the lines of a function which takes a URL and
directory, exports handlers for the URL and makes an object for each
file in the directory

-done

(6) Storage management should go into the base class, I think.  Then
object instantiation gets an awful lot simpler: a mapping from file
type -> class.  Also renaming and deletion

-done

Worth having the base class do file opening too, and the kids run on
streams?  Unsure.  Be cleaner, I suppose

(7) (UI) How do we create new objects, now that we may have many
different types?  Requirement: we don't want to actually create a
persistent file on disk until there is some data to put in it.

Suggest that the "file not found" handler be a menu of the available
object types, each of which will take the user into the appropriate
editor with an empty object of that type.

-done

There needs to be some way of getting a vanilla edit form based on the
class rather than on the object: make-edit-form and
process-post-request need methods specialised on (eql {instance of
standard-object}) or (eql class-name)

-done

handler needs adding to call them.  Urls are ".../new/filename.fileextension"
(e.g. "new/here%20is%20my%20page.phtml"); it has GET and POST handlers
like what the edit handlers do

-done

If we try to add a page which already exists, we increment a serial
number on its name (so, "CMUCL.2")

(8) Need to have objects know about their own URLs for operations.
Add these as slots at instantiation time

-done

(9) set Expires: headers and stuff to kill the caching problem.
Actually, just setting Last-Modified would probably help

(10) write the search code

(n) finish porting araneida to :sockets

